syntax = "proto3";

package broker.v1;

import "broker/v1/broker_common.proto";

// GetStateRequest queries current strategy state.
message GetStateRequest {
  // Empty = all symbols
  repeated string symbols = 1;
  // Whether to include position data
  bool include_positions = 2;
  // Whether to include open orders
  bool include_orders = 3;
  // Whether to include account state
  bool include_account = 4;
  // Client-provided ID for request tracking
  string request_id = 5;
  // Broker to get state from (e.g., "alpaca", "interactive_brokers")
  Broker broker = 6;
}

// GetStateResponse returns current state snapshot.
message GetStateResponse {
  // Current positions indexed by symbol
  map<string, Position> positions = 1;
  // Open orders indexed by order ID
  map<string, Order> orders = 2;
  // Account state information
  AccountState account = 3;
  // Timestamp of state snapshot in microseconds since epoch
  int64 timestamp_us = 4;
}

// AccountState represents the current state of a trading account.
message AccountState {
  // Available cash
  PreciseDecimal cash_balance = 1;
  // Total portfolio value
  PreciseDecimal portfolio_value = 2;
  // Available buying power
  PreciseDecimal buying_power = 3;
  // Initial margin requirement
  PreciseDecimal initial_margin = 4;
  // Maintenance margin requirement
  PreciseDecimal maintenance_margin = 5;
  // Currently used margin
  PreciseDecimal margin_used = 6;
  // Today's P&L
  PreciseDecimal daily_pnl = 7;
  // Total P&L
  PreciseDecimal total_pnl = 8;
}
