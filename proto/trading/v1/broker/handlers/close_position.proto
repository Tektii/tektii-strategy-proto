syntax = "proto3";

package trading.v1.broker.handlers;

import "trading/v1/broker/common.proto";

// ClosePositionRequest closes a position.
message ClosePositionRequest {
  // Symbol of the position to close
  string symbol = 1;
  // Quantity to close (0 = close entire position)
  broker.PreciseDecimal quantity = 2;

  // Order routing preferences
  // Order type for closing (default: MARKET)
  OrderType order_type = 3;
  // Limit price for LIMIT order type
  broker.PreciseDecimal limit_price = 4;

  // Client-provided ID for request tracking
  string request_id = 5;

  // Provider/broker to close position with (e.g., "alpaca", "interactive_brokers")
  Provider provider = 6;
}

// ClosePositionResponse confirms position closure.
message ClosePositionResponse {
  // Whether the close request was accepted
  bool accepted = 1;
  // Echo of client request ID
  string request_id = 2;

  // Created order IDs
  // IDs of orders created to close position
  repeated string order_ids = 3;

  // Position details
  // Total position quantity before closing
  broker.PreciseDecimal position_quantity = 4;
  // Quantity being closed by this request
  broker.PreciseDecimal closing_quantity = 5;
  // Quantity remaining after this request
  broker.PreciseDecimal remaining_quantity = 6;

  // Human-readable rejection reason if not accepted
  string reject_reason = 7;
  // Structured rejection code if not accepted
  RejectCode reject_code = 8;

  // Server timestamp of the response
  int64 timestamp_us = 9;
}
