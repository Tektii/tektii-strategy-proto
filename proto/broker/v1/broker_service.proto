syntax = "proto3";

package broker.v1;

import "broker/v1/handler_cancel_order.proto";
import "broker/v1/handler_close_position.proto";
import "broker/v1/handler_get_historical_data.proto";
import "broker/v1/handler_get_market_depth.proto";
import "broker/v1/handler_get_state.proto";
import "broker/v1/handler_modify_order.proto";
import "broker/v1/handler_modify_trade_protection.proto";
import "broker/v1/handler_place_order.proto";

option optimize_for = SPEED;

// TektiiBroker is implemented by broker adapters (backtest engine, brokers).
// Strategies call these methods to query state and manage orders.
service TektiiBrokerService {
  // Query Methods - pull-based data access
  rpc GetState(GetStateRequest) returns (GetStateResponse);
  // Retrieve historical market data
  rpc GetHistoricalData(GetHistoricalDataRequest) returns (GetHistoricalDataResponse);
  // Get current order book depth
  rpc GetMarketDepth(GetMarketDepthRequest) returns (GetMarketDepthResponse);

  // Order Management - synchronous with immediate feedback
  rpc PlaceOrder(PlaceOrderRequest) returns (PlaceOrderResponse);
  // Cancel an existing order
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
  // Modify parameters of an existing order
  rpc ModifyOrder(ModifyOrderRequest) returns (ModifyOrderResponse);
  // Close an existing position
  rpc ClosePosition(ClosePositionRequest) returns (ClosePositionResponse);
  // Manage stop loss and take profit orders
  rpc ModifyTradeProtection(ModifyTradeProtectionRequest) returns (ModifyTradeProtectionResponse);
}
